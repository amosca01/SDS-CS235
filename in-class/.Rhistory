knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(plotly)
txhousing
p <- txhousing %>%
group_by(city) %>%
ggplot(aes(x = date, y = median)) +
geom_line(aes(group = city), alpha = 0.2)
class(p)
p
class(p)
ggplotly(p)
library(dplyr)
tx_grouped <- group_by(txhousing, city)
# initiate a plotly object with date on x and median on y
p <- plot_ly(tx_grouped, x = ~date, y = ~median)
plotly_data(p)
p
p %>%
add_lines(alpha = 0.2, name = "Texan Cities")
p <- txhousing %>%
group_by(city) %>%
plot_ly(x = ~date, y = ~median) %>%
add_lines(alpha = 0.2, name = "Texan Cities", hoverinfo = "none") %>%
filter(city == "Houston") %>%
add_lines(name = "Houston")
rangeslider(p)
p2 <- txhousing %>%
ggplot(aes(date, median)) + geom_bin2d()
p2 <- ggplotly(p2)
p2
library(reticulate)
install.packages("reticulate")
library(reticulate)
reticulate::repl_python()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
reticulate::repl_python()
library(reticulate)
reticulate::repl_python()
reticulate::repl_python()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
use_python("/usr/bin/python3")
reticulate::repl_python()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
use_python("/Users/abmosca/anaconda3/bin/python3")
reticulate::repl_python()
reticulate::repl_python()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
use_python("/Users/abmosca/anaconda3/bin/python")
reticulate::repl_python()
reticulate::repl_python()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
use_python("/usr/bin/python3")
reticulate::repl_python()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
use_python("/usr/bin/python3")
plotly <- import("plotly")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
use_condaenv("/Users/abmosca/anaconda3/bin/python3")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
use_python("/usr/local/bin/python")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
use_python("/usr/bin/python3")
use_virtualenv("~/myenv")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
use_python("/usr/bin/python3")
use_condaenv("myenv")
txhousing
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
use_python("/usr/bin/python3")
use_condaenv("myenv")
library(ggplot2)
txhousing
write_csv(txhousing, "txhousing.csv")
library(tidyverse)
write_csv(txhousing, "txhousing.csv")
library(ggplot2)
p <- txhousing %>%
group_by(city) %>%
ggplot(aes(x = date, y = median)) +
geom_line(aes(group = city), alpha = 0.2)
p
library(dplyr)
tx_grouped <- group_by(txhousing, city)
# initiate a plotly object with date on x and median on y
p <- plot_ly(tx_grouped, x = ~date, y = ~median)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(reticulate)
use_python("/usr/bin/python3")
use_condaenv("myenv")
library(dplyr)
tx_grouped <- group_by(txhousing, city)
# initiate a plotly object with date on x and median on y
p <- plot_ly(tx_grouped, x = ~date, y = ~median)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
txhousing
library(ggplot2)
p <- txhousing %>%
group_by(city) %>%
ggplot(aes(x = date, y = median)) +
geom_line(aes(group = city), alpha = 0.2)
p
class(p)
ggplotly(p)
library(dplyr)
tx_grouped <- group_by(txhousing, city)
# initiate a plotly object with date on x and median on y
p <- plot_ly(tx_grouped, x = ~date, y = ~median)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(plotly)
txhousing
p <- txhousing %>%
group_by(city) %>%
ggplot(aes(x = date, y = median)) +
geom_line(aes(group = city), alpha = 0.2)
p
class(p)
ggplotly(p)
ggplotly(p, tooltip = "city")
library(dplyr)
tx_grouped <- group_by(txhousing, city)
# initiate a plotly object with date on x and median on y
p <- plot_ly(tx_grouped, x = ~date, y = ~median)
plotly_data(p)
library(plotly)
library(tidyverse)
p <- txhousing %>%
group_by(city) %>%
plot_ly(x = ~date, y = ~median) %>%
add_lines(alpha = 0.2, name = "All TX Cities", hoverinfo = "none") %>%
filter(city == "Houston") %>%
add_lines(name = "Houston")
p2 <- ggplotly(ggplot(txhousing, aes(date, median)) + geom_bin2d())
library(htmltools)
tagList(p, p2)
tags$div(
style = "display: flex; flex-wrap: wrap",
tags$div(p, style = "width: 45%; padding: 1em;"),
tags$div(p2, style = "width: 45%; padding: 1em;")
)
library(shiny)
fluidPage(
fluidRow(
column(6, p), column(6, p2)
)
)
subplot(
p, p2,
shareY = TRUE
)
library(crosstalk)
shared_data <- txhousing %>%
filter(city %in% c("Austin", "Houston", "Dallas")) %>%
SharedData$new(~year)
p <- ggplot(shared_data, aes(month, median)) +
geom_line(aes(group = year)) +
facet_wrap(~ city)
ggplotly(p, tooltip = "year") %>%
highlight(color = "red")
shared_penguins <- SharedData$new(penguins)
penguins
library(palmerpenguins)
install.packages("palmerpenguins")
library(palmerpenguins)
shared_penguins <- SharedData$new(penguins)
p <- GGally::ggpairs(shared_penguins, aes(color = Species), columns = 1:4)
highlight(ggplotly(p), on = "plotly_selected")
View(shared_penguins)
shared_penguins <- SharedData$new(penguins)
p <- GGally::ggpairs(shared_penguins, aes(color = species), columns = 1:4)
highlight(ggplotly(p), on = "plotly_selected")
shared_iris <- SharedData$new(iris)
p <- GGally::ggpairs(shared_iris, aes(color = Species), columns = 1:4)
highlight(ggplotly(p), on = "plotly_selected")
shared_penguins <- SharedData$new(penguins)
p <- GGally::ggpairs(shared_penguins, aes(color = species), columns = 1:4)
highlight(ggplotly(p), on = "plotly_selected")
penguins <- penguins %>% select(species,
bill_length_mm,
bill_depth_mm,
flipper_length_mm,
body_mass_g) %>%
drop_na()
shared_penguins <- SharedData$new(penguins)
p <- GGally::ggpairs(shared_penguins, aes(color = species), columns = 1:4)
highlight(ggplotly(p), on = "plotly_selected")
shared_iris <- SharedData$new(iris)
p <- GGally::ggpairs(shared_iris, aes(color = Species), columns = 1:4)
highlight(ggplotly(p), on = "plotly_selected")
library(palmerpenguins)
penguins <- penguins %>% select(species,
bill_length_mm,
bill_depth_mm,
flipper_length_mm,
body_mass_g) %>%
drop_na()
shared_penguins <- SharedData$new(penguins)
p <- GGally::ggpairs(shared_penguins, aes(color = species), columns = 1:4)
highlight(ggplotly(p), on = "plotly_selected")
View(penguins)
View(penguins)
library(palmerpenguins)
penguins <- penguins %>% select(species,
bill_length_mm,
bill_depth_mm,
flipper_length_mm,
body_mass_g) %>%
drop_na()
shared_penguins <- SharedData$new(penguins)
p <- GGally::ggpairs(shared_penguins, aes(color = species), columns = 2:5)
highlight(ggplotly(p), on = "plotly_selected")
library(leaflet)
shared_quakes <- SharedData$new(quakes)
p <- plot_ly(shared_quakes, x = ~depth, y = ~mag) %>%
add_markers(alpha = 0.5) %>%
highlight("plotly_selected", dynamic = TRUE)
map <- leaflet(shared_quakes) %>%
addTiles() %>%
addCircles()
bscols(widths = c(6, 6), p, map)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(plotly)
library(tidyverse)
p <- txhousing %>%
group_by(city) %>%
plot_ly(x = ~date, y = ~median) %>%
add_lines(alpha = 0.2, name = "All TX Cities", hoverinfo = "none") %>%
filter(city == "Houston") %>%
add_lines(name = "Houston")
p2 <- ggplotly(ggplot(txhousing, aes(date, median)) + geom_bin2d())
library(htmltools)
tagList(p, p2)
tags$div(
style = "display: flex; flex-wrap: wrap",
tags$div(p, style = "width: 45%; padding: 1em;"),
tags$div(p2, style = "width: 45%; padding: 1em;")
)
library(shiny)
fluidPage(
fluidRow(
column(6, p), column(6, p2)
)
)
subplot(
p, p2,
shareY = TRUE
)
library(crosstalk)
shared_data <- txhousing %>%
filter(city %in% c("Austin", "Houston", "Dallas")) %>%
SharedData$new(~year)
p <- ggplot(shared_data, aes(month, median)) +
geom_line(aes(group = year)) +
facet_wrap(~ city)
ggplotly(p, tooltip = "year") %>%
highlight(color = "red") # click on a line to see highlight
library(palmerpenguins)
penguins <- penguins %>% select(species,
bill_length_mm,
bill_depth_mm,
flipper_length_mm,
body_mass_g) %>%
drop_na()
shared_penguins <- SharedData$new(penguins)
p <- GGally::ggpairs(shared_penguins, aes(color = species), columns = 2:5)
highlight(ggplotly(p), on = "plotly_selected") # brush to see brushing and linking
library(leaflet)
shared_quakes <- SharedData$new(quakes)
p <- plot_ly(shared_quakes, x = ~depth, y = ~mag) %>%
add_markers(alpha = 0.5) %>%
highlight("plotly_selected", dynamic = TRUE)
map <- leaflet(shared_quakes) %>%
addTiles() %>%
addCircles()
bscols(widths = c(6, 6), p, map)
unlink("plotly-R-CMV_cache", recursive = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(plotly)
library(tidyverse)
p <- txhousing %>%
group_by(city) %>%
plot_ly(x = ~date, y = ~median) %>%
add_lines(alpha = 0.2, name = "All TX Cities", hoverinfo = "none") %>%
filter(city == "Houston") %>%
add_lines(name = "Houston")
p2 <- ggplotly(ggplot(txhousing, aes(date, median)) + geom_bin2d())
library(htmltools)
tagList(p, p2)
tags$div(
style = "display: flex; flex-wrap: wrap",
tags$div(p, style = "width: 45%; padding: 1em;"),
tags$div(p2, style = "width: 45%; padding: 1em;")
)
library(shiny)
fluidPage(
fluidRow(
column(6, p), column(6, p2)
)
)
subplot(
p, p2,
shareY = TRUE
)
library(crosstalk)
shared_data <- txhousing %>%
filter(city %in% c("Austin", "Houston", "Dallas")) %>%
SharedData$new(~year)
p <- ggplot(shared_data, aes(month, median)) +
geom_line(aes(group = year)) +
facet_wrap(~ city)
ggplotly(p, tooltip = "year") %>%
highlight(color = "red") # click on a line to see highlight
library(palmerpenguins)
write_csv(penguins, "palmerpenguins.csv")
